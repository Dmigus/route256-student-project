// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: copyfrom.go

package modify

import (
	"context"
)

// iteratorForinsertOrderItem implements pgx.CopyFromSource.
type iteratorForinsertOrderItem struct {
	rows                 []insertOrderItemParams
	skippedFirstNextCall bool
}

func (r *iteratorForinsertOrderItem) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForinsertOrderItem) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].OrderID,
		r.rows[0].SkuID,
		r.rows[0].Count,
	}, nil
}

func (r iteratorForinsertOrderItem) Err() error {
	return nil
}

func (q *Queries) insertOrderItem(ctx context.Context, arg []insertOrderItemParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"order_item"}, []string{"order_id", "sku_id", "count"}, &iteratorForinsertOrderItem{rows: arg})
}
