// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: queries.sql

package orders

import (
	"context"
)

const createOrder = `-- name: createOrder :one
INSERT INTO "order"(id, user_id, status, are_items_reserved)
VALUES (nextval('order_id_seq')*1000 +$1, $2, $3, $4)
RETURNING id
`

type createOrderParams struct {
	Column1          interface{}
	UserID           int64
	Status           string
	AreItemsReserved bool
}

func (q *Queries) createOrder(ctx context.Context, arg createOrderParams) (int64, error) {
	row := q.db.QueryRow(ctx, createOrder,
		arg.Column1,
		arg.UserID,
		arg.Status,
		arg.AreItemsReserved,
	)
	var id int64
	err := row.Scan(&id)
	return id, err
}

type insertOrderItemParams struct {
	OrderID int64
	SkuID   int64
	Count   int32
}
